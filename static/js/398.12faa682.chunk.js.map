{"version":3,"file":"static/js/398.12faa682.chunk.js","mappings":"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","sources":["features/MMap/utils/helpers.ts","features/MMap/hooks/useSimulate.tsx","features/MMap/index.ts","features/MMap/MMap.tsx","app/mocks/noties.ts","features/LeftMenu/LeftMenu.tsx","features/LeftMenu/index.ts","features/MapStructure/MapStructure.tsx","features/MapStructure/index.ts","pages/notes/index.ts","pages/notes/PageSecond.tsx"],"sourcesContent":["import {CircleElement, ForeignObjectElement, LineElement} from \"../types/types\";\r\n\r\nexport const checkIsObject = (data: any) => typeof data === 'object' && !Array.isArray(data)\r\nexport const getCoordinate = (obj: any, key: string | number): number => checkIsObject(obj) ? obj[key] : 0\r\n\r\nexport const setCoordinates = (link: LineElement, circle: CircleElement, text: ForeignObjectElement) => {\r\n    const radius = 50\r\n    const side = 2 * radius * Math.cos(Math.PI / 4)\r\n\r\n    link\r\n        .attr(\"x1\", (d) => getCoordinate(d.source, 'x'))\r\n        .attr(\"y1\", (d) => getCoordinate(d.source, 'y'))\r\n        .attr(\"x2\", (d) => getCoordinate(d.target, 'x'))\r\n        .attr(\"y2\", (d) => getCoordinate(d.target, 'y'))\r\n\r\n    circle\r\n        .attr(\"cx\", (d) => getCoordinate(d, 'x'))\r\n        .attr(\"cy\", (d) => getCoordinate(d, 'y'))\r\n        .attr(\"r\", radius)\r\n\r\n    text\r\n        .attr(\"x\", (d) => getCoordinate(d, 'x') - (side / 2))\r\n        .attr(\"y\", (d) => getCoordinate(d, 'y') - (side / 2))\r\n        .attr(\"width\", side)\r\n        .attr(\"height\", side)\r\n}\r\n","import {LegacyRef, useEffect, useRef} from \"react\";\r\nimport * as d3 from \"d3\";\r\nimport {getCoordinate, setCoordinates} from \"../utils/helpers\";\r\nimport {Data} from \"../types/types\";\r\n\r\nexport const useSimulate = (data: Data[]) =>{\r\n    const ref: LegacyRef<SVGSVGElement> | undefined = useRef(null)\r\n\r\n    useEffect(() => {\r\n        const circles = ref?.current?.childNodes && Array.from(ref.current.childNodes).find((c: any) => c.className.baseVal === 'node')\r\n        if (data.length > 0 && !circles) {\r\n            const svgElement = d3.select(ref?.current)\r\n\r\n            const element = svgElement.selectAll(\"g\").data(data)\r\n\r\n            const link = svgElement.append(\"g\")\r\n                .attr('id', 'links')\r\n                .attr(\"stroke\", \"#999\")\r\n                .attr(\"stroke-opacity\", 0.6)\r\n                .selectAll(\"line\")\r\n                .data(data)\r\n                .join(\"line\");\r\n\r\n            const node = element.enter()\r\n                .append(\"g\")\r\n                .attr('class', 'node')\r\n                .attr(\"fill\", \"#fff\")\r\n                .attr(\"stroke\", \"#000\")\r\n                .attr(\"stroke-width\", 1.5)\r\n\r\n            const circle = node.append(\"circle\")\r\n                .attr(\"fill\", d => d.level === 1 ? (\"rgb(192,214,94)\") : (d.root ? 'rgb(142,224,120)' : \"rgb(234,232,232)\"))\r\n                .attr(\"stroke\", d => null)\r\n                .attr(\"cx\", (d) => d.root ? 0 : getCoordinate(d, 'x'))\r\n                .attr(\"cy\", (d) => d.root ? 0 : getCoordinate(d, 'y'))\r\n\r\n            const text = node.append(\"foreignObject\")\r\n\r\n            text\r\n                .append(\"xhtml:div\")\r\n                .attr('style',\r\n                    \"display: flex; justify-content: center; align-items: center; height: 100%; \")\r\n                .append(\"xhtml:span\")\r\n                .attr('style',\r\n                    \"color: red; word-break: break-word; text-align: center; max-height: 100%;\")\r\n                .html((d) => d.title + ' level: ' +  d.level || '')\r\n\r\n\r\n            d3.forceSimulation(data)\r\n                .force(\"link\", d3.forceLink(data).id((d: any) => d.id).distance(0).strength(1))\r\n                .velocityDecay(0.9)\r\n                .force(\"charge\", d3.forceManyBody().strength(-300))\r\n                .force(\"x\", d3.forceX())\r\n                .force(\"y\", d3.forceY())\r\n                .force(\"r\", d3.forceRadial((d) => 0))\r\n                .force(\"collide\", d3.forceCollide(d => d.root ? 100 : 60))\r\n                .on(\"tick\", () => setCoordinates(link, circle, text));\r\n        }\r\n    }, [data])\r\n\r\n    return {ref}\r\n\r\n}\r\n","import MMap from \"./MMap\";\r\nexport default MMap\r\n","import React from \"react\";\r\nimport {Data} from \"./types/types\";\r\nimport {useSimulate} from \"./hooks/useSimulate\";\r\n\r\ninterface IProps {\r\n    data: Data[]\r\n    width?: number\r\n    height?: number\r\n}\r\n\r\nconst MMap: React.FC<IProps> = ({data = [], width = 600, height = 600}) => {\r\n\r\n    const {ref} = useSimulate(data)\r\n\r\n    return (\r\n        <div style={{\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            // backgroundColor: \"lightgrey\"\r\n        }}>\r\n            <svg ref={ref} viewBox={`${-width / 2} ${-height / 2} ${width} ${height}`} width={width} height={height}/>\r\n        </div>\r\n    );\r\n}\r\nexport default MMap;\r\n","const NOTIES = [\r\n    {\r\n        id: 0,\r\n        level: 0,\r\n        source: 0,\r\n        target: 0,\r\n        fx: 0,\r\n        fy: 0,\r\n        'root': true,\r\n        title: '0'\r\n    },\r\n    {\r\n        id: 1,\r\n        level: 1,\r\n        source: 0,\r\n        target: 1,\r\n        title: '1'\r\n    },\r\n    {\r\n        id: 3,\r\n        level: 1,\r\n        source: 0,\r\n        target: 3,\r\n        title: '3'\r\n    },\r\n    {\r\n        id: 4,\r\n        level: 1,\r\n        source: 0,\r\n        target: 4,\r\n        title: '4'\r\n    },\r\n\r\n    {\r\n        id: 5,\r\n        level: 2,\r\n        source: 3,\r\n        target: 5,\r\n        title: '5'\r\n    },\r\n    {\r\n        id: 6,\r\n        level: 2,\r\n        source: 3,\r\n        target: 6,\r\n        title: '6'\r\n    },\r\n    {\r\n        id: 7,\r\n        level: 2,\r\n        source: 3,\r\n        target: 7,\r\n        title: '7'\r\n    },\r\n\r\n    {\r\n        id: 8,\r\n        level: 2,\r\n        source: 4,\r\n        target: 8,\r\n        title: '8'\r\n    },\r\n    {\r\n        id: 9,\r\n        level: 2,\r\n        source: 4,\r\n        target: 9,\r\n        title: '9'\r\n    },\r\n    {\r\n        id: 10,\r\n        level: 2,\r\n        source: 4,\r\n        target: 10,\r\n        title: '10'\r\n    },\r\n\r\n    {\r\n        id: 11,\r\n        level: 2,\r\n        source: 1,\r\n        target: 11,\r\n        title: '11'\r\n    },\r\n    {\r\n        id: 13,\r\n        level: 2,\r\n        source: 1,\r\n        target: 13,\r\n        title: '13'\r\n    }\r\n]\r\n\r\nexport {NOTIES}\r\n","import React, {FC, useState} from \"react\";\r\nimport {Layout, Menu, MenuProps, Row, theme} from \"antd\";\r\nimport {\r\n    ApartmentOutlined,\r\n    DesktopOutlined, FileOutlined,\r\n    LeftOutlined,\r\n    PieChartOutlined,\r\n    RightOutlined, TeamOutlined,\r\n    UserOutlined\r\n} from \"@ant-design/icons\";\r\n\r\nconst {Sider} = Layout;\r\n\r\ninterface IProps {\r\n\r\n}\r\n\r\ntype MenuItem = Required<MenuProps>['items'][number];\r\n\r\nfunction getItem(\r\n    label: React.ReactNode,\r\n    key: React.Key,\r\n    icon?: React.ReactNode,\r\n    children?: MenuItem[],\r\n): MenuItem {\r\n    return {\r\n        key,\r\n        icon,\r\n        children,\r\n        label,\r\n    } as MenuItem;\r\n}\r\n\r\nconst items: MenuItem[] = [\r\n    getItem('Option 1', '0', <ApartmentOutlined />),\r\n    getItem('Option 1', '1', <PieChartOutlined/>),\r\n    getItem('Option 2', '2', <DesktopOutlined/>),\r\n    getItem('User', 'sub1', <UserOutlined/>, [\r\n        getItem('Tom', '3'),\r\n        getItem('Bill', '4'),\r\n        getItem('Alex', '5'),\r\n    ]),\r\n    getItem('Team', 'sub2', <TeamOutlined/>, [getItem('Team 1', '6'), getItem('Team 2', '8')]),\r\n    getItem('Files', '9', <FileOutlined/>),\r\n];\r\n\r\n\r\nconst LeftMenu: FC<IProps> = () => {\r\n    const [collapsed, setCollapsed] = useState(true);\r\n\r\n\r\n    const {\r\n        token: {colorBgContainer},\r\n    } = theme.useToken();\r\n\r\n\r\n    return (\r\n        <Sider collapsible collapsed={collapsed} trigger={null}>\r\n            <Row className={'trigger'}\r\n                 justify=\"center\"\r\n                 align=\"middle\"\r\n                 style={{height: 48, background: '#002140'}}\r\n                 onClick={() => setCollapsed(!collapsed)}\r\n            >\r\n                {React.createElement(collapsed ? RightOutlined : LeftOutlined, {style: {color: '#fff'}})}\r\n            </Row>\r\n            <Menu theme=\"dark\" defaultSelectedKeys={['1']} mode=\"inline\" items={items}/>\r\n        </Sider>\r\n    );\r\n}\r\nexport default LeftMenu;\r\n","import LeftMenu from \"./LeftMenu\";\r\nexport default LeftMenu\r\n","import React, {useState} from 'react';\r\nimport {CarryOutOutlined, CheckOutlined, FormOutlined} from '@ant-design/icons';\r\nimport {Select, Switch, Tree} from 'antd';\r\nimport type {DataNode} from 'antd/es/tree';\r\nimport {NOTIES} from \"../../app/mocks/noties\";\r\nimport {Data} from \"../MMap/types/types\";\r\n\r\nconst treeData: DataNode[] = [\r\n    {\r\n        title: 'parent 1',\r\n        key: '0-0',\r\n        icon: <CarryOutOutlined/>,\r\n        children: [\r\n            {\r\n                title: 'parent 1-0',\r\n                key: '0-0-0',\r\n                icon: <CarryOutOutlined/>,\r\n                children: [\r\n                    {title: 'leaf', key: '0-0-0-0', icon: <CarryOutOutlined/>},\r\n                    {\r\n                        title: (\r\n                            <>\r\n                                <div>multiple line title</div>\r\n                                <div>multiple line title</div>\r\n                            </>\r\n                        ),\r\n                        key: '0-0-0-1',\r\n                        icon: <CarryOutOutlined/>,\r\n                    },\r\n                    {title: 'leaf', key: '0-0-0-2', icon: <CarryOutOutlined/>},\r\n                ],\r\n            },\r\n            {\r\n                title: 'parent 1-1',\r\n                key: '0-0-1',\r\n                icon: <CarryOutOutlined/>,\r\n                children: [{title: 'leaf', key: '0-0-1-0', icon: <CarryOutOutlined/>}],\r\n            },\r\n            {\r\n                title: 'parent 1-2',\r\n                key: '0-0-2',\r\n                icon: <CarryOutOutlined/>,\r\n                children: [\r\n                    {title: 'leaf', key: '0-0-2-0', icon: <CarryOutOutlined/>},\r\n                    {\r\n                        title: 'leaf',\r\n                        key: '0-0-2-1',\r\n                        icon: <CarryOutOutlined/>,\r\n                        switcherIcon: <FormOutlined/>,\r\n                    },\r\n                ],\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        title: 'parent 2',\r\n        key: '0-1',\r\n        icon: <CarryOutOutlined/>,\r\n        children: [\r\n            {\r\n                title: 'parent 2-0',\r\n                key: '0-1-0',\r\n                icon: <CarryOutOutlined/>,\r\n                children: [\r\n                    {title: 'leaf', key: '0-1-0-0', icon: <CarryOutOutlined/>},\r\n                    {\r\n                        title: 'lead', key: '0-1-0-6', icon: <CarryOutOutlined/>, children: [\r\n                            {title: 'leaf', key: '0-0-0-05', icon: <CarryOutOutlined/>},\r\n                            {\r\n                                title: (\r\n                                    <>\r\n                                        <div>multiple line title</div>\r\n                                        <div>multiple line title</div>\r\n                                    </>\r\n                                ),\r\n                                key: '0-0-0-135',\r\n                                icon: <CarryOutOutlined/>,\r\n                            },\r\n                            {title: 'leaf', key: '0-0-0-2654', icon: <CarryOutOutlined/>},\r\n                        ],\r\n                    },\r\n                ],\r\n            },\r\n        ],\r\n    },\r\n];\r\n\r\nfunction deepCopy(data: Data[]): Data[] {\r\n    return JSON.parse(JSON.stringify(data))\r\n}\r\n\r\nconst to = (NOTES: Data[]) => {\r\n    const notes: Data[] = deepCopy(NOTES).sort((a, b) => a.level - b.level).reverse()\r\n    const obj: any = {}\r\n    let countLevel = notes[0].level\r\n    for (let i = 0; i < notes.length; i++) {\r\n        obj[notes[i].id] = notes[i]\r\n    }\r\n    for (let i = 0; i < notes.length; i++) {\r\n        if (notes[i].level === countLevel && !notes[i].root) {\r\n            const source = obj[notes[i].source]\r\n            source.children === undefined\r\n                ? source.children = [notes[i]]\r\n                : source.children.push(notes[i])\r\n            source.key = notes[i].id\r\n            delete obj[notes[i].id]\r\n            i !== notes.length - 1 && (countLevel = notes[i + 1].level)\r\n        }\r\n    }\r\n    return [obj[0]]\r\n}\r\n\r\nconst MapStructure: React.FC = () => {\r\n    const onSelect = (selectedKeys: React.Key[], info: any) => {\r\n        console.log('selected', selectedKeys, info);\r\n    };\r\n\r\n    return (\r\n        <Tree\r\n            showLine={true}\r\n            onSelect={onSelect}\r\n            treeData={to(NOTIES)}\r\n        />\r\n    );\r\n};\r\n\r\nexport default MapStructure;\r\n","import MapStructure from \"./MapStructure\";\r\nexport default MapStructure\r\n","import PageSecond from \"./PageSecond\";\r\nexport default PageSecond\r\n","import React, {useRef, useState} from 'react';\r\nimport MMap from \"../../features/MMap\";\r\nimport {NOTIES} from \"../../app/mocks/noties\";\r\nimport {Layout} from 'antd';\r\nimport LeftMenu from \"../../features/LeftMenu\";\r\nimport MapStructure from \"../../features/MapStructure\";\r\n\r\n\r\nconst PageSecond = () => {\r\n    const DATA = JSON.parse(JSON.stringify(NOTIES))\r\n    return (\r\n        <Layout style={{minHeight: '100vh'}}>\r\n            <LeftMenu/>\r\n            <MapStructure/>\r\n            <MMap data={[...DATA]} width={800} height={800}/>\r\n        </Layout>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default PageSecond;\r\n"],"names":["getCoordinate","obj","key","data","Array","isArray","useSimulate","ref","useRef","useEffect","circles","current","childNodes","from","find","c","className","baseVal","length","svgElement","d3","element","selectAll","link","append","attr","join","node","enter","circle","d","level","root","text","html","title","force","id","distance","strength","velocityDecay","on","side","Math","cos","PI","source","target","setCoordinates","width","height","style","display","flexDirection","alignItems","justifyContent","viewBox","NOTIES","fx","fy","Sider","Layout","getItem","label","icon","children","items","ApartmentOutlined","PieChartOutlined","DesktopOutlined","UserOutlined","TeamOutlined","FileOutlined","useState","collapsed","setCollapsed","theme","token","colorBgContainer","collapsible","trigger","justify","align","background","onClick","React","RightOutlined","LeftOutlined","color","defaultSelectedKeys","mode","CarryOutOutlined","FormOutlined","to","NOTES","notes","JSON","parse","stringify","sort","a","b","reverse","countLevel","i","undefined","push","showLine","onSelect","selectedKeys","info","console","log","treeData","DATA","minHeight"],"sourceRoot":""}